`timescale 1ns / 1ps

module full_subtractor (A, C, Bin, Bout, Diff);
    output Bin,Diff;
    input A,C,Bout;
    wire S,T,U,V;
    not not1(S,A);
    xor xor1(Diff,A,C,Bout);
    
    and and1(T,S,C);
    and and2(U,S,Bout);
    and and3(V,C,Bout);
    or or1(Bin,T,U,V);
endmodule

module _32bitsub(a,b,bin,diff,t);
    input [31:0]a,b;
    input [31:0]t;
    output [31:0] diff;
    output bin;
    wire [31:0]bout;
    assign bout[0]=1'b0;
    genvar i;
    generate for(i=0; i<31 ; i=i+1) begin
        full_subtractor uut(a[i],b[i],bout[i+1],bout[i],diff[i]);
    end
    full_subtractor tp (a[31],b[31],bin,bout[31],diff[31]);
    endgenerate
endmodule

module compare(t,diff,ans);
    input [31:0] t,diff;
    output ans;
    reg ans;
    integer i;
    integer flag=1;
    _32bitsub  uut(
        .t(t), .diff(diff)
    );

    initial begin
        for(i = 0;i<32;i= i+1)
            begin
                if(t[i] != diff[i]) 
                begin
                    flag = 0;
                end
            end
        if(flag == 0)
        begin
            ans=0;
        end
        else
        begin
            ans=1;
        end
    end

endmodule

module sub32bit;
wire [31:0] diff;//output
wire cout;//output
reg [31:0] a,b;//input
reg cin;//input

_32bitsub uut(
    .a(a),
    .b(b),
    .cin(cin),
    .s(s),
    .cout(cout)
);

initial 
        begin
            $dumpfile("32bitaddtb.vcd");
            $dumpvars();
        end

initial begin
    // $display($time, " << Starting the Simulation >>");


    a=0; b=0; cin=0;
    #100 a= 32'b0000000000000000000000000011111; b=32'b000000000000000000000000001100; cin=1'b0;
    #10 a= 32'b0000000000000000000000000011111; b=32'b000000000000000000000000001100; cin=1'b0;
    #10 a= 32'b0000000000000001100011000011111; b=32'b000000000000000000000110001100; cin=1'b1;
    #10 a= 32'b0000000000000001111111111111111; b=32'b000000000000000000000000000000; cin=1'b1;
end

initial
    $monitor("time= ", $time, "A=%d, B=%d, Cin=%b : Sum= %d, Cout=%b",a,b,cin,s,cout);
endmodule